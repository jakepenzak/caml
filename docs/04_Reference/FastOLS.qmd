# FastOLS { #caml.FastOLS }

```python
FastOLS(
    self,
    Y,
    T,
    G=None,
    X=None,
    W=None,
    *,
    discrete_treatment=False,
    engine='cpu',
)
```

FastOLS is a fast implementation of the OLS estimator designed specifically with treatment effect estimation in mind.

**FastOLS is experimental and may change significantly in future versions.**

This class estimates a standard linear regression model for any number of continuous or binary outcomes and a single continuous or binary treatment,
and provides estimates for the Average Treatment Effects (ATEs) and Group Average Treatment Effects (GATEs) out of the box. Additionally,
methods are provided for estimating & predicting Conditional Average Treatment Effects (CATEs) of individual observations and custom GATEs
can also be estimated. Note, this method assumes linear treatment effects and heterogeneity. This is typically sufficient when primarily concerned with
ATEs and GATEs.

#TODO - Elaborate on this claim

This class leverages JAX for fast numerical computations, which can be installed using `pip install caml[jax]`, defaulting to NumPy if JAX is not
available. For GPU acceleration, install JAX with GPU support using `pip install caml[jax-gpu]`.

For outcome/treatment support, see [matrix](support_matrix.qmd).

## Model Specification

The model is given by:
$$
\begin{equation}
\mathbf{Y} = T \beta + \mathbf{Q}\mathbf{\Gamma} + \left(T \circ \mathbf{Q}\right)\mathbf{\Omega} + \mathbf{W}\mathbf{\Psi} + \mathbf{E}
\tag{1}
\end{equation}
$$

where $\mathbf{Y}_{n \times p}$ is the matrix of $p$ outcomes, $T_{n \times 1}$ is the treatment variable,
$\mathbf{Q}_{n \times (j+l)} = \bigl[\mathbf{X} \; \mathbf{G} \bigr]$ is the horizontal stack matrix of $j$ covariates and $l$ group variables,
$\mathbf{W}_{n \times m}$ is the matrix of $m$ control covariates, $\beta_{1 \times p}$ is the vector of coefficients on $T$,
$\mathbf{\Gamma}_{(j+l) \times p}$ is the matrix of coefficients on $\mathbf{Q}$, $\mathbf{\Omega}_{(j+l) \times p}$ is the matrix
of coefficients on the interaction terms between $T$ and $\mathbf{Q}$, $\mathbf{\Psi}_{m \times p}$ is the matrix of
coefficients on $\mathbf{W}$, and $\mathbf{E}_{n \times p}$ is the error term matrix.

$\mathbf{Q}$ contains the covariates and group variables used to model treatment effect heterogeneity via interaction terms.

#### Treatment Effect Estimation & Inference

Our average treatment effect (ATE) $\tau$ for a binary treatment variable $T$ is defined as:

$$
\tau = \mathbb{E}_n\left[\mathbb{E}\left[\mathbf{Y} \mid T = 1\right] - \mathbb{E}\left[\mathbf{Y} \mid T = 0\right]\right]
$$

Let $D$ denote the design matrix for (1), then assuming exogeneity in $T$, the ATEs are identified and can be estimated as follows:
$$
\mathbf{\tau} = \mathbf{\Theta'}\bar{d}
$$

where $\mathbf{\Theta'} = \left[\beta' \; \mathbf{\Gamma'} \; \mathbf{\Omega'} \; \mathbf{\Psi'}\right]$ is
the horizontally concatenated matrix of transposed coefficient matrices, and
$\bar{d} = \mathbb{E}_n\left[D_{T=1} - D_{T=0}\right]$ is the the average difference in the design matrix from
toggling the treatment variable across all observations.

Furthermore, for each outcome $k \in \{1,2,...,p\}$, we can estimate the standard error of the ATE as follows:
$$
\text{SE}(\tau_k) = \sqrt{\bar{d}'\text{VCV}(\mathbf{\Theta}_k)\bar{d}}
$$

where $\text{VCV}(\mathbf{\Theta}_k)$ is the variance-covariance matrix of the estimated coefficients for the $k$-th outcome.

This logic extends naturally to the estimation of GATEs and CATEs, where $\bar{d} = \mathbb{E}_n\left[D_{T=1} - D_{T=0} | \mathbf{G}=g\right]$
$\bar{d} = \mathbb{E}_n\left[D_{T=1} - D_{T=0} | \mathbf{G}=g, \mathbf{X}=x\right]$, $\dots$, etc. and to continuous treatments
$\bar{d} = \mathbb{E}_n\left[D_{T=t+1} - D_{T=t}\right]$, $\dots$, etc.

## Parameters {.doc-section .doc-section-parameters}

| Name               | Type                      | Description                                                                                                                                                                  | Default    |
|--------------------|---------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| Y                  | Collection\[str\]         | A list of outcome variable names.                                                                                                                                            | _required_ |
| T                  | str                       | The treatment variable name.                                                                                                                                                 | _required_ |
| G                  | Collection\[str\] \| None | A list of group variable names, by default None. These will be the groups for which GATEs will be estimated.                                                                 | `None`     |
| X                  | Collection\[str\] \| None | A list of covariate variable names, by default None. These will be the covariates for which heterogeneity/CATEs can be estimated.                                            | `None`     |
| W                  | Collection\[str\] \| None | A list of additional covariate variable names to be used as controls, by default None. These will be the additional covariates not used for modeling heterogeneity/CATEs.    | `None`     |
| discrete_treatment | bool                      | Whether the treatment is discrete, by default False                                                                                                                          | `False`    |
| engine             | str                       | The engine to use for computation, by default "cpu". Can be "cpu" or "gpu". Note "gpu" requires JAX to be installed, which can be installed via `pip install caml[jax-gpu]`. | `'cpu'`    |

## Attributes {.doc-section .doc-section-attributes}

| Name               | Type                      | Description                                                                                                                                                                 |
|--------------------|---------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Y                  | Collection\[str\]         | A list of outcome variable names.                                                                                                                                           |
| T                  | str                       | The treatment variable name.                                                                                                                                                |
| G                  | Collection\[str\] \| None | The list of group variable names, by default None. These will be the groups for which GATEs will be estimated.                                                              |
| X                  | Collection\[str\] \| None | The list of variable names representing the confounder/control feature set to be utilized for estimating heterogeneity/CATEs, that are in addition to G.                    |
| W                  | Collection\[str\] \| None | The list of variable names representing the confounder/control feature **not** utilized for estimating heterogeneity/CATEs.                                                 |
| discrete_treatment | bool                      | Whether the treatment is discrete, by default True                                                                                                                          |
| engine             | str                       | The engine to use for computation, by default "cpu". Can be "cpu" or "gpu". Note "gpu" requires JAX to be installed, which can be installed via `pip install caml[jax-gpu]` |
| formula            | str                       | The formula leveraged for design matrix creation via Patsy.                                                                                                                 |
| results            | dict                      | A dictionary containing the results of the fitted model & estimated ATEs/GATEs.                                                                                             |

## Methods

| Name | Description |
| --- | --- |
| [fit](#caml.FastOLS.fit) | Fits the regression model on the provided data and estimates ATEs and GATEs. |

### fit { #caml.FastOLS.fit }

```python
FastOLS.fit(data, *, n_jobs=-1, estimate_effects=True, robust_vcv=False)
```

Fits the regression model on the provided data and estimates ATEs and GATEs.

#### Parameters {.doc-section .doc-section-parameters}

| Name             | Type          | Description                                                                                                                                                                                    | Default    |
|------------------|---------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| data             | DataFrameLike | Input data to fit the model on. Supported formats: pandas DataFrame, PySpark DataFrame, Polars DataFrame, or Any object with toPandas() or to_pandas() method                                  | _required_ |
| n_jobs           | int           | The number of jobs to use for parallel processing in the estimation of GATEs. Defaults to -1, which uses all available processors. If getting OOM errors, try setting n_jobs to a lower value. | `-1`       |
| estimate_effects | bool          | Whether to estimate Average Treatment Effects (ATEs) and Group Average Treatment Effects (GATEs).                                                                                              | `True`     |
| robust_vcv       | bool          | Whether to use heteroskedasticity-robust (white) variance-covariance matrix and standard errors.                                                                                               | `False`    |