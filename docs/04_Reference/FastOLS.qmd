# FastOLS { #caml.FastOLS }

```python
FastOLS(
    self,
    Y,
    T,
    G=None,
    X=None,
    W=None,
    *,
    discrete_treatment=False,
    engine='cpu',
)
```

FastOLS is an optimized implementation of the OLS estimator designed specifically with treatment effect estimation in mind.

**FastOLS is experimental and may change significantly in future versions.**

This class estimates a standard linear regression model for any number of continuous or binary outcomes and a single continuous or binary treatment,
and provides estimates for the Average Treatment Effects (ATEs) and Group Average Treatment Effects (GATEs) out of the box. Additionally,
methods are provided for estimating custom GATEs & Conditional Average Treatment Effects (CATEs) of individual observations, which can also be used for out-of-sample predictions.
Note, this method assumes linear treatment effects and heterogeneity, which is typically sufficient when primarily concerned with ATEs and GATEs.

#TODO - Elaborate on this claim

This class leverages JAX for fast numerical computations, which can be installed using `pip install caml[jax]`, defaulting to NumPy if JAX is not
available. For GPU acceleration, install JAX with GPU support using `pip install caml[jax-gpu]`.

For outcome/treatment support, see [Support Matrix](support_matrix.qmd).

For model specification details, see [Model Specifications](../02_Concepts/models.qmd).

## Parameters {.doc-section .doc-section-parameters}

| Name               | Type                      | Description                                                                                                                                                | Default    |
|--------------------|---------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| Y                  | Collection\[str\]         | A list of outcome variable names.                                                                                                                          | _required_ |
| T                  | str                       | The treatment variable name.                                                                                                                               | _required_ |
| G                  | Collection\[str\] \| None | A list of group variable names. These will be the groups for which GATEs will be estimated.                                                                | `None`     |
| X                  | Collection\[str\] \| None | A list of covariate variable names. These will be the covariates for which heterogeneity/CATEs can be estimated.                                           | `None`     |
| W                  | Collection\[str\] \| None | A list of additional covariate variable names to be used as controls. These will be the additional covariates not used for modeling heterogeneity/CATEs.   | `None`     |
| discrete_treatment | bool                      | Whether the treatment is discrete                                                                                                                          | `False`    |
| engine             | str                       | The engine to use for computation. Can be "cpu" or "gpu". Note "gpu" requires JAX to be installed, which can be installed via `pip install caml[jax-gpu]`. | `'cpu'`    |

## Attributes {.doc-section .doc-section-attributes}

| Name               | Type                      | Description                                                                                                                                               |
|--------------------|---------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|
| Y                  | Collection\[str\]         | A list of outcome variable names.                                                                                                                         |
| T                  | str                       | The treatment variable name.                                                                                                                              |
| G                  | Collection\[str\] \| None | The list of group variable names. These will be the groups for which GATEs will be estimated.                                                             |
| X                  | Collection\[str\] \| None | The list of variable names representing the confounder/control feature set to be utilized for estimating heterogeneity/CATEs, that are in addition to G.  |
| W                  | Collection\[str\] \| None | The list of variable names representing the confounder/control feature **not** utilized for estimating heterogeneity/CATEs.                               |
| discrete_treatment | bool                      | Whether the treatment is binary.                                                                                                                          |
| engine             | str                       | The engine to use for computation. Can be "cpu" or "gpu". Note "gpu" requires JAX to be installed, which can be installed via `pip install caml[jax-gpu]` |
| formula            | str                       | The formula leveraged for design matrix creation via Patsy.                                                                                               |
| results            | dict                      | A dictionary containing the results of the fitted model & estimated ATEs/GATEs.                                                                           |

## Examples {.doc-section .doc-section-examples}

```{python}
from caml import FastOLS
from caml.extensions.synthetic_data import CamlSyntheticDataGenerator

data_generator = CamlSyntheticDataGenerator(n_cont_outcomes=1,
                                            n_binary_outcomes=1,
                                            n_binary_modifiers=2,
                                            seed=10)
df = data_generator.df

fo_obj = FastOLS(
    Y=[c for c in df.columns if "Y" in c],
    T="T1_binary",
    G=[c for c in df.columns if "X" in c and ("bin" in c or "dis" in c)],
    X=[c for c in df.columns if "X" in c and "cont" in c],
    W=[c for c in df.columns if "W" in c],
    engine="cpu",
    discrete_treatment=True,
)

print(fo_obj)
```

## Methods

| Name | Description |
| --- | --- |
| [fit](#caml.FastOLS.fit) | Fits the regression model on the provided data and, optionally, estimates Average Treatment Effect(s) (ATE) and Group Average Treatment Effect(s) (GATE). |
| [estimate_ate](#caml.FastOLS.estimate_ate) | Estimate Average Treatment Effects (ATEs) of `T` on each `Y` from fitted model. |
| [estimate_cate](#caml.FastOLS.estimate_cate) | Estimate Conditional Average Treatment Effects (CATEs) for all given observations. |
| [predict](#caml.FastOLS.predict) | Alias for `estimate_cate`. |
| [prettify_treatment_effects](#caml.FastOLS.prettify_treatment_effects) | Convert treatment effects dictionary to a pandas DataFrame. |

### fit { #caml.FastOLS.fit }

```python
FastOLS.fit(df, *, n_jobs=-1, estimate_effects=True, robust_vcv=False)
```

Fits the regression model on the provided data and, optionally, estimates Average Treatment Effect(s) (ATE) and Group Average Treatment Effect(s) (GATE).

If estimate_effects is True, the method estimates Average Treatment Effects (ATEs) and Group Average Treatment Effects (GATEs), based on specified `G`.
This leverages `estimate_ate` method under the hood, but efficiently reuses the data and parallelizes the computation of GATEs.

#### Parameters {.doc-section .doc-section-parameters}

| Name             | Type          | Description                                                                                                                                                                                    | Default    |
|------------------|---------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| df               | DataFrameLike | Input dataframe to fit the model on. Supported formats: pandas DataFrame, PySpark DataFrame, Polars DataFrame, or Any object with `toPandas()` or `to_pandas()` method                         | _required_ |
| n_jobs           | int           | The number of jobs to use for parallel processing in the estimation of GATEs. Defaults to -1, which uses all available processors. If getting OOM errors, try setting n_jobs to a lower value. | `-1`       |
| estimate_effects | bool          | Whether to estimate Average Treatment Effects (ATEs) and Group Average Treatment Effects (GATEs).                                                                                              | `True`     |
| robust_vcv       | bool          | Whether to use heteroskedasticity-robust (white) variance-covariance matrix and standard errors.                                                                                               | `False`    |

#### Examples {.doc-section .doc-section-examples}

```{python}
fo_obj.fit(df, n_jobs=4, estimate_effects=True, robust_vcv=True)

fo_obj.results.keys()
```

### estimate_ate { #caml.FastOLS.estimate_ate }

```python
FastOLS.estimate_ate(
    df,
    *,
    return_results_dict=False,
    group='Custom Group',
    membership=None,
    _diff_matrix=None,
)
```

Estimate Average Treatment Effects (ATEs) of `T` on each `Y` from fitted model.

If the entire dataframe is provided, the function will estimate the ATE of the entire population.
If a subset of the dataframe is provided, the function will estimate the ATE of the subset (e.g., GATEs).

#### Parameters {.doc-section .doc-section-parameters}

| Name                | Type                       | Description                                                                                                                                                                                                    | Default          |
|---------------------|----------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------|
| df                  | DataFrameLike              | Dataframe containing the data to estimate the ATEs. Supported formats: pandas DataFrame, PySpark DataFrame, Polars DataFrame, or Any object with `toPandas()` or `to_pandas()` method                          | _required_       |
| return_results_dict | bool                       | If True, the function returns a dictionary containing ATEs/GATEs, standard errors, t-statistics, confidence intervals, and p-values. If False, the function returns a numpy array containing ATEs/GATEs alone. | `False`          |
| group               | str                        | Name of the group to estimate the ATEs for.                                                                                                                                                                    | `'Custom Group'` |
| membership          | str \| None                | Name of the membership variable to estimate the ATEs for.                                                                                                                                                      | `None`           |
| _diff_matrix        | jnp.ndarray \| None = None | Private argument used in `fit` method.                                                                                                                                                                         | `None`           |

#### Returns {.doc-section .doc-section-returns}

| Name   | Type                | Description                                                                                                                   |
|--------|---------------------|-------------------------------------------------------------------------------------------------------------------------------|
|        | jnp.ndarray \| dict | Estimated ATEs/GATEs or dictionary containing the estimated ATEs/GATEs and their standard errors, t-statistics, and p-values. |

#### Examples {.doc-section .doc-section-examples}

```{python}
df_filtered = df.query(
    "X3_binary == 0 & X1_continuous < 5"
).copy()

custom_gate = fo_obj.estimate_ate(df_filtered)

custom_gate
```
```{python}
custom_gate = fo_obj.estimate_ate(df_filtered, return_results_dict=True, group="My Custom Group")

custom_gate
```

### estimate_cate { #caml.FastOLS.estimate_cate }

```python
FastOLS.estimate_cate(df, *, return_results_dict=False)
```

Estimate Conditional Average Treatment Effects (CATEs) for all given observations.

#### Parameters {.doc-section .doc-section-parameters}

| Name                | Type          | Description                                                                                                                                                                                          | Default    |
|---------------------|---------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| df                  | DataFrameLike | Dataframe containing the data to estimate CATEs for. Supported formats:     pandas DataFrame, PySpark DataFrame, Polars DataFrame, or Any object with `toPandas()` or `to_pandas()` method           | _required_ |
| return_results_dict | bool          | If True, the function returns a dictionary containing CATEs, standard errors, t-statistics, confidence intervals, and p-values. If False, the function returns a numpy array containing CATEs alone. | `False`    |

#### Returns {.doc-section .doc-section-returns}

| Name   | Type                | Description                                                                        |
|--------|---------------------|------------------------------------------------------------------------------------|
|        | jnp.ndarray \| dict | CATEs or dictionary containing CATEs, standard errors, t-statistics, and p-values. |

#### Examples {.doc-section .doc-section-examples}

```{python}
cates = fo_obj.estimate_cate(df)
cates[:5]
```
```{python}
res = fo_obj.estimate_cate(df, return_results_dict=True)
res.keys()
```

### predict { #caml.FastOLS.predict }

```python
FastOLS.predict(df, *, return_results_dict=False)
```

Alias for `estimate_cate`.

#### Parameters {.doc-section .doc-section-parameters}

| Name                | Type          | Description                                                                                                                                                                                          | Default    |
|---------------------|---------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|
| df                  | DataFrameLike | Dataframe containing the data to estimate CATEs for. Supported formats:     pandas DataFrame, PySpark DataFrame, Polars DataFrame, or Any object with `toPandas()` or `to_pandas()` method           | _required_ |
| return_results_dict | bool          | If True, the function returns a dictionary containing CATEs, standard errors, t-statistics, confidence intervals, and p-values. If False, the function returns a numpy array containing CATEs alone. | `False`    |

#### Returns {.doc-section .doc-section-returns}

| Name   | Type                | Description                                                                        |
|--------|---------------------|------------------------------------------------------------------------------------|
|        | jnp.ndarray \| dict | CATEs or dictionary containing CATEs, standard errors, t-statistics, and p-values. |

#### Examples {.doc-section .doc-section-examples}

```{python}
cates = fo_obj.predict(df)
cates[:5]
```
```{python}
res = fo_obj.predict(df, return_results_dict=True)
res.keys()
```

### prettify_treatment_effects { #caml.FastOLS.prettify_treatment_effects }

```python
FastOLS.prettify_treatment_effects(effects=None)
```

Convert treatment effects dictionary to a pandas DataFrame.

If no argument is provided, the results are constructed from internal results dictionary. This is
useful default behavior. For custom treatment effects, you can pass the results generated
by the `estimate_ate` method.

#### Parameters {.doc-section .doc-section-parameters}

| Name    | Type   | Description                                                                                             | Default   |
|---------|--------|---------------------------------------------------------------------------------------------------------|-----------|
| effects | dict   | Dictionary of treatment effects. If None, the results are constructed from internal results dictionary. | `None`    |

#### Returns {.doc-section .doc-section-returns}

| Name   | Type         | Description                     |
|--------|--------------|---------------------------------|
|        | pd.DataFrame | DataFrame of treatment effects. |

#### Examples {.doc-section .doc-section-examples}

```{python}
fo_obj.prettify_treatment_effects()
```
```{python}
## Using a custom GATE
custom_gate = fo_obj.estimate_ate(df_filtered, return_results_dict=True, group="My Custom Group")
fo_obj.prettify_treatment_effects(custom_gate)
```