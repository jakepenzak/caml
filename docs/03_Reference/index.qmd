# API Reference {.doc .doc-index}

## CaML Core

`from caml import *`

| | |
| --- | --- |
| [CamlCATE](CamlCATE.qmd#caml.CamlCATE) | The CamlCATE class represents an opinionated implementation of Causal Machine Learning techniques for estimating |
| [CamlPolicy](CamlPolicy.qmd#caml.CamlPolicy) | The CamlPolicy class represents a Policy Learning implementation for estimating... |
| [CamlDML](CamlDML.qmd#caml.CamlDML) |  |
| [CamlDynamic](CamlDynamic.qmd#caml.CamlDynamic) | The CamlDynamic class represents a dynamic (time) implementation for estimating... |

## Sythetic Data Generation

`from caml.extensions.synthetic_data import *`

| | |
| --- | --- |
| [make_partially_linear_dataset_simple](make_partially_linear_dataset_simple.qmd#caml.extensions.synthetic_data.make_partially_linear_dataset_simple) | Generate a partially linear data generating process with simple 1 or 2 dimensional CATE function. The outcome is continuous and the treatment can be binary or continuous. |
| [make_partially_linear_dataset_constant](make_partially_linear_dataset_constant.qmd#caml.extensions.synthetic_data.make_partially_linear_dataset_constant) | Generate a partially linear model data generating process with a constant treatment effect (ATE only). The outcome and treatment are both continuous. |
| [make_fully_hetereogenous_dataset](make_fully_hetereogenous_dataset.qmd#caml.extensions.synthetic_data.make_fully_hetereogenous_dataset) | Generate an "interactive regression" model data generating process with fully heterogenous treatment effects. The outcome is continuous and the treatment is binary. |

## Plots

`from caml.extensions.plots import *`

| | |
| --- | --- |
| [extensions.plots.plot](extensions.plots.plot.qmd#caml.extensions.plots.plot) | A plot. |

## Developer Tools

| | |
| --- | --- |
| [utils.generate_random_string](utils.generate_random_string.qmd#caml.utils.generate_random_string) | Function to generate a random string of ascii lowercase letters and digits of length N. |
| [logging.setup_logging](logging.setup_logging.qmd#caml.logging.setup_logging) | Set up logging configuration. |